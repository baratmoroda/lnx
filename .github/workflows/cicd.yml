name: CI CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
jobs:
  build-and-push:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
 
      - name: Login to docker hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3.6.1
 
      - name: Build and push docker image
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./docker
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/administration:latest
 
  test:
    runs-on: ubuntu-latest
    needs: [ build-and-push ]
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/adminstration: latest
    container:
      image: ${{ env.DOCKER_IMAGE }}
      options: --network host
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_DB: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_USER: kubsu
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
 
      - name: Wait for PostgreSQL
        run: |
          while ! nc -z localhost 5432; do
            sleep 1
          done
          echo "PostgreSQL is ready"

      - name: Run tests
        run: make test
        env:
          DATABASE_URL: postgres://kubsu:kubsu@localhost:5432/kubsu
 
  deploy:
    runs-on: self-hosted
    needs: [ test ]
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/tasks/docker
            ./restart.sh
